#pragma once
#include "stdafx.h"
// #include <Windows.h>
// #include <strsafe.h>
// #include <iostream>

#define CMD_BUF_MAX_LENGTH      (LOCALE_NAME_MAX_LENGTH + 38)
#define CMD_AOSC_SET_LOCALE     L"echo \"LANG=%s.UTF-8\" > /etc/locale.conf"

const wchar_t* languages[] = { L"aa", L"af", L"agr", L"ak", L"am", L"an", L"anp", L"ar", L"as", L"ast", L"ayc", L"az", L"be", L"bem", L"ber", L"bg", L"bhb", L"bho", L"bi", L"bn", L"bo", L"br", L"brx", L"bs", L"byn", L"ca", L"ce", L"chr", L"ckb", L"cmn", L"crh", L"cs", L"csb", L"cv", L"cy", L"da", L"de", L"doi", L"dsb", L"dv", L"dz", L"el", L"en", L"eo", L"es", L"et", L"eu", L"fa", L"ff", L"fi", L"fil", L"fo", L"fr", L"fur", L"fy", L"ga", L"gd", L"gez", L"gl", L"gu", L"gv", L"ha", L"hak", L"he", L"hi", L"hif", L"hne", L"hr", L"hsb", L"ht", L"hu", L"hy", L"ia", L"id", L"ig", L"ik", L"is", L"it", L"iu", L"ja", L"ka", L"kab", L"kk", L"kl", L"km", L"kn", L"ko", L"kok", L"ks", L"ku", L"kw", L"ky", L"lb", L"lg", L"li", L"lij", L"ln", L"lo", L"lt", L"lv", L"lzh", L"mag", L"mai", L"mfe", L"mg", L"mhr", L"mi", L"miq", L"mjw", L"mk", L"ml", L"mn", L"mni", L"mnw", L"mr", L"ms", L"mt", L"my", L"nan", L"nb", L"nds", L"ne", L"nhn", L"niu", L"nl", L"nn", L"nr", L"nso", L"oc", L"om", L"or", L"os", L"pa", L"pap", L"pl", L"ps", L"pt", L"quz", L"raj", L"ro", L"ru", L"rw", L"sa", L"sah", L"sat", L"sc", L"sd", L"se", L"sgs", L"shn", L"shs", L"si", L"sid", L"sk", L"sl", L"sm", L"so", L"sq", L"sr", L"ss", L"st", L"sv", L"sw", L"szl", L"ta", L"tcy", L"te", L"tg", L"th", L"the", L"ti", L"tig", L"tk", L"tl", L"tn", L"to", L"tpi", L"tr", L"ts", L"tt", L"ug", L"uk", L"unm", L"ur", L"uz", L"ve", L"vi", L"wa", L"wae", L"wal", L"wo", L"xh", L"yi", L"yo", L"yue", L"yuw", L"zh", L"zu" };
int sizes[] = { 3, 1, 1, 1, 1, 1, 1, 19, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 2, 19, 0, 21, 1, 1, 1, 1, 1, 1, 1, 5, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 3, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, };
const wchar_t* territories[][21] = {
    // List of territory codes for each language.
    {L"DJ", L"ER", L"ET", },
    {L"ZA", },
    {L"PE", },
    {L"GH", },
    {L"ET", },
    {L"ES", },
    {L"IN", },
    {L"AE", L"BH", L"DZ", L"EG", L"IN", L"IQ", L"JO", L"KW", L"LB", L"LY", L"MA", L"OM", L"QA", L"SA", L"SD", L"SS", L"SY", L"TN", L"YE", },
    {L"IN", },
    {L"ES", },
    {L"PE", },
    {L"AZ", L"IR", },
    {L"BY", },
    {L"ZM", },
    {L"DZ", L"MA", },
    {L"BG", },
    {L"IN", },
    {L"IN", L"NP", },
    {L"VU", },
    {L"BD", L"IN", },
    {L"CN", L"IN", },
    {L"FR", },
    {L"IN", },
    {L"BA", },
    {L"ER", },
    {L"AD", L"ES", L"FR", L"IT", },
    {L"RU", },
    {L"US", },
    {L"IQ", },
    {L"TW", },
    {L"UA", },
    {L"CZ", },
    {L"PL", },
    {L"RU", },
    {L"GB", },
    {L"DK", },
    {L"AT", L"BE", L"CH", L"DE", L"IT", L"LI", L"LU", },
    {L"IN", },
    {L"DE", },
    {L"MV", },
    {L"BT", },
    {L"CY", L"GR", },
    {L"US", L"AG", L"AU", L"BW", L"CA", L"DK", L"GB", L"HK", L"IE", L"IL", L"IN", L"NG", L"NZ", L"PH", L"SC", L"SG", L"ZA", L"ZM", L"ZW", },
    {},
    {L"ES", L"AR", L"BO", L"CL", L"CO", L"CR", L"CU", L"DO", L"EC", L"GT", L"HN", L"MX", L"NI", L"PA", L"PE", L"PR", L"PY", L"SV", L"US", L"UY", L"VE", },
    {L"EE", },
    {L"ES", },
    {L"IR", },
    {L"SN", },
    {L"FI", },
    {L"PH", },
    {L"FO", },
    {L"FR", L"BE", L"CA", L"CH", L"LU", },
    {L"IT", },
    {L"DE", L"NL", },
    {L"IE", },
    {L"GB", },
    {L"ER", L"ET", },
    {L"ES", },
    {L"IN", },
    {L"GB", },
    {L"NG", },
    {L"TW", },
    {L"IL", },
    {L"IN", },
    {L"FJ", },
    {L"IN", },
    {L"HR", },
    {L"DE", },
    {L"HT", },
    {L"HU", },
    {L"AM", },
    {L"FR", },
    {L"ID", },
    {L"NG", },
    {L"CA", },
    {L"IS", },
    {L"CH", L"IT", },
    {L"CA", },
    {L"JP", },
    {L"GE", },
    {L"DZ", },
    {L"KZ", },
    {L"GL", },
    {L"KH", },
    {L"IN", },
    {L"KR", },
    {L"IN", },
    {L"IN", },
    {L"TR", },
    {L"GB", },
    {L"KG", },
    {L"LU", },
    {L"UG", },
    {L"BE", L"NL", },
    {L"IT", },
    {L"CD", },
    {L"LA", },
    {L"LT", },
    {L"LV", },
    {L"TW", },
    {L"IN", },
    {L"IN", L"NP", },
    {L"MU", },
    {L"MG", },
    {L"RU", },
    {L"NZ", },
    {L"NI", },
    {L"IN", },
    {L"MK", },
    {L"IN", },
    {L"MN", },
    {L"IN", },
    {L"MM", },
    {L"IN", },
    {L"MY", },
    {L"MT", },
    {L"MM", },
    {L"TW", },
    {L"NO", },
    {L"DE", L"NL", },
    {L"NP", },
    {L"MX", },
    {L"NU", L"NZ", },
    {L"AW", L"BE", L"NL", },
    {L"NO", },
    {L"ZA", },
    {L"ZA", },
    {L"FR", },
    {L"ET", L"KE", },
    {L"IN", },
    {L"RU", },
    {L"IN", L"PK", },
    {L"AW", L"CW", },
    {L"PL", },
    {L"AF", },
    {L"BR", L"PT", },
    {L"PE", },
    {L"IN", },
    {L"RO", },
    {L"RU", L"UA", },
    {L"RW", },
    {L"IN", },
    {L"RU", },
    {L"IN", },
    {L"IT", },
    {L"IN", },
    {L"NO", },
    {L"LT", },
    {L"MM", },
    {L"CA", },
    {L"LK", },
    {L"ET", },
    {L"SK", },
    {L"SI", },
    {L"WS", },
    {L"DJ", L"ET", L"KE", L"SO", },
    {L"AL", L"MK", },
    {L"ME", L"RS", },
    {L"ZA", },
    {L"ZA", },
    {L"FI", L"SE", },
    {L"KE", L"TZ", },
    {L"PL", },
    {L"IN", L"LK", },
    {L"IN", },
    {L"IN", },
    {L"TJ", },
    {L"TH", },
    {L"NP", },
    {L"ER", L"ET", },
    {L"ER", },
    {L"TM", },
    {L"PH", },
    {L"ZA", },
    {L"TO", },
    {L"PG", },
    {L"CY", L"TR", },
    {L"ZA", },
    {L"RU", },
    {L"CN", },
    {L"UA", },
    {L"US", },
    {L"IN", L"PK", },
    {L"UZ", },
    {L"ZA", },
    {L"VN", },
    {L"BE", },
    {L"CH", },
    {L"ET", },
    {L"SN", },
    {L"ZA", },
    {L"US", },
    {L"NG", },
    {L"HK", },
    {L"PG", },
    {L"CN", L"HK", L"SG", L"TW", },
    {L"ZA", },
};

namespace LocaleHelper {
    static HRESULT getLocale(LPWSTR buf);
    static int isValidLocale(LPWSTR code);
    static HRESULT GenerateLocaleCommand(LPWSTR command_buf);
}